libos.entrypoint = "{{ java_home }}/bin/java"

loader.log_level = "{{ log_level }}"

loader.insecure__use_cmdline_argv = true

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/lib:/usr/{{ arch_libdir }}:{{ java_home }}/lib"

fs.mounts = [
  { uri = "file:{{ gramine.runtimedir() }}",    path = "/lib" },
  { uri = "file:{{ arch_libdir }}",             path = "{{ arch_libdir }}" },
  { uri = "file:/usr",                          path = "/usr" },
  { uri = "file:{{ java_home }}",              path = "{{ java_home }}" },
  { uri = "file:target/classes",               path = "/app/classes" },
]

sgx.enclave_size = "8G"
sgx.max_threads = {{ '1' if env.get('EDMM', '0') == '1' else '64' }}
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}

# `use_exinfo = true` is needed because OpenJDK queries fault info on page faults
sgx.use_exinfo = true

sgx.trusted_files = [
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:{{ java_home }}/lib/",
  "file:{{ java_home }}/bin/java",
  "file:{{ java_home }}/conf/security/java.security",
  "file:{{ java_home }}/conf/security/java.policy",
  "file:{{ java_home }}/conf/security/policy/",
  "file:target/classes/",
]

sgx.allowed_files = [
  "file:server.keystore",
  "file:client.truststore",
]
